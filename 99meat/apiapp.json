{
  "$schema": "http://json-schema.org/schemas/2014-11-01/apiapp.json#",
  "id": "99meat",
  "namespace": "microsoft.com",
  "gateway": "2015-01-14",
  "version": "1.0.0",
  "title": "99meat",
  "summary": "",
  "author": "",
  "endpoints": {
    "apiDefinition": "/swagger/docs/v1",
    "status": null
  }
}


 var containerBuilder = new ContainerBuilder();
            containerBuilder.RegisterModule(new AutofacConventionModule());
            containerBuilder.RegisterType<SessionManager>()
                .AsSelf();
            //.SingleInstance();
            containerBuilder.Populate(services);
            var autofacContainer = containerBuilder.Build();
            return new AutofacServiceProvider(autofacContainer);





public class AutofacConventionModule : Module
    {
        protected override void Load(ContainerBuilder builder)
        {
            var bootstrapper = new BusinessLogic.Bootstrapper();

            builder.RegisterAssemblyTypes(AppDomain.CurrentDomain.GetAssemblies())
                  .Where(t => t.Name.EndsWith(""))
                .AsImplementedInterfaces()
                .InstancePerLifetimeScope();
        }
    }
